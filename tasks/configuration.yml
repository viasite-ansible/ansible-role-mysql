---

- name: Create datadir if it does not exist
  file:
    path: "{{ mysql_datadir }}"
    state: directory
    owner: mysql
    group: mysql
    mode:  0755
    setype: mysqld_db_t
  register: mysql_register_create_datadir

- name: Initialize datadir
  command: mysql_install_db --datadir={{ mysql_datadir }}
  when: mysql_register_create_datadir|changed
  register: mysql_register_initialize_datadir
  tags: skip_ansible_lint

- name: Write debian.cnf if new datadir installed
  template:
    src: debian.cnf.j2
    dest: /etc/mysql/debian.cnf
    owner: root
    group: root
    mode: 0600
  when: mysql_register_initialize_datadir|changed
  tags: skip_ansible_lint

- name: Write custom server configuration
  template:
    src: my.cnf.j2
    dest: /etc/mysql/my.cnf
    owner: root
    group: root
    mode: 0644
  register: mysql_config_status

- name: Remove default logs
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/log/mysql.log
    - /var/log/mysql.err
  when: mysql_log_error != "/var/log/mysql.err"

- name: Stop server for delete binary logs
  service:
    name: mysql
    state: stopped
  when: mysql_installation|changed or mysql_config_status|changed
  tags: [ delete_binary_logs, skip_ansible_lint ]

- name: Delete binary logs
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ mysql_datadir }}/ib_logfile0"
    - "{{ mysql_datadir }}/ib_logfile1"
  when: mysql_installation|changed or mysql_config_status|changed
  tags: [ delete_binary_logs, skip_ansible_lint ]

- name: Start server after delete binary logs
  service:
    name: mysql
    state: started
  when: mysql_installation|changed or mysql_config_status|changed
  tags: [ delete_binary_logs, skip_ansible_lint ]

- name: Check mysql running
  service:
    name: mysql
    state: started

- name: Update first MySQL root password
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
  with_items: "{{ ansible_nodename }}"

# after first password define we need to store .my.cnf
- name: Copy .my.cnf file into the root home folder
  template:
    src: root-my-cnf.j2
    dest: /root/.my.cnf
    owner: root
    mode: 0600

# after mysql_install_db we need to setup debian-sys-maint user
- name: debian-sys-maint access
  mysql_user:
    name: debian-sys-maint
    host: localhost
    password: "{{ mysql_debian_sys_maint_password }}"
    priv: "*.*:ALL,GRANT"
    check_implicit_admin: yes
  when: mysql_register_initialize_datadir|changed
  tags: skip_ansible_lint

- name: Update other MySQL root password
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password }}"
    check_implicit_admin: yes
  with_items:
    - 127.0.0.1
    - localhost
    #- '::1' # fails on first password update

# must run after .my.cnf update
- name: Update MySQL root password for ::1
  mysql_user:
    name: root
    host: '::1'
    password: "{{ mysql_root_password }}"
    check_implicit_admin: yes

- name: Ensure anonymous users are not in the database
  mysql_user:
    name: ''
    host: "{{ item }}"
    state: absent
  with_items:
    - "{{ ansible_nodename }}"
    - localhost

- name: remove test database
  mysql_db:
    name: test
    state: absent
